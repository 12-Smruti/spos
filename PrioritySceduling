import java.util.Scanner;
import java.util.Arrays;
import java.util.Comparator;

class Process {
    int id;
    int burstTime;
    int priority;
    int waitingTime;
    int turnaroundTime;

    Process(int id, int burstTime, int priority) {
        this.id = id;
        this.burstTime = burstTime;
        this.priority = priority;
    }
}

public class PriorityScheduling1 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Input the number of processes
        System.out.print("Enter the number of processes: ");
        int n = scanner.nextInt();

        // Array to store processes
        Process[] processes = new Process[n];

        // Input burst time and priority for each process
        for (int i = 0; i < n; i++) {
            System.out.print("Enter burst time for process " + (i + 1) + ": ");
            int burstTime = scanner.nextInt();
            System.out.print("Enter priority for process " + (i + 1) + " (lower value = higher priority): ");
            int priority = scanner.nextInt();
            processes[i] = new Process(i + 1, burstTime, priority);
        }

        // Sort processes based on priority (ascending order)
        Arrays.sort(processes, Comparator.comparingInt(p -> p.priority));

        // Calculate waiting time for each process
        int totalWaitingTime = 0;
        processes[0].waitingTime = 0;  // First process has 0 waiting time
        for (int i = 1; i < n; i++) {
            processes[i].waitingTime = processes[i - 1].waitingTime + processes[i - 1].burstTime;
            totalWaitingTime += processes[i].waitingTime;
        }

        // Calculate turnaround time for each process
        int totalTurnaroundTime = 0;
        for (int i = 0; i < n; i++) {
            processes[i].turnaroundTime = processes[i].waitingTime + processes[i].burstTime;
            totalTurnaroundTime += processes[i].turnaroundTime;
        }

        // Display process information
        System.out.println("\nProcess\tBurst Time\tPriority\tWaiting Time\tTurnaround Time");
        for (Process p : processes) {
            System.out.printf("P%d\t\t%d\t\t%d\t\t%d\t\t%d\n", p.id, p.burstTime, p.priority, p.waitingTime, p.turnaroundTime);
        }

        // Calculate and display average waiting time and turnaround time
        double avgWaitingTime = (double) totalWaitingTime / n;
        double avgTurnaroundTime = (double) totalTurnaroundTime / n;
        System.out.printf("\nAverage Waiting Time: %.2f\n", avgWaitingTime);
        System.out.printf("Average Turnaround Time: %.2f\n", avgTurnaroundTime);

        scanner.close();
    }
}
